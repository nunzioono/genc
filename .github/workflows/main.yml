name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  test:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Run tests
      run: cargo test

  build:
    needs: test
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Build release
      run: cargo build --release

    - name: Upload release binaries
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.platform }}-binary
        path: target/release/

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download Ubuntu binary
      uses: actions/download-artifact@v2
      with:
        name: ubuntu-latest-binary
        path: ./ubuntu

    - name: Download macOS binary
      uses: actions/download-artifact@v2
      with:
        name: macos-latest-binary
        path: ./macos

    - name: Download Windows binary
      uses: actions/download-artifact@v2
      with:
        name: windows-latest-binary
        path: ./windows

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Ubuntu binary
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ubuntu/your-binary-name
        asset_name: ubuntu-your-binary-name
        asset_content_type: application/octet-stream

    - name: Upload macOS binary
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./macos/your-binary-name
        asset_name: macos-your-binary-name
        asset_content_type: application/octet-stream

    - name: Upload Windows binary
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./windows/your-binary-name
        asset_name: windows-your-binary-name
        asset_content_type: application/octet-stream
