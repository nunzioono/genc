name: Build and Release Rust Crate

on:
  push:
    branches:
      - '**' # Triggers on push to any branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: '1.72.0' # Specify the Rust version you need
          components: 'clippy, rustfmt' # Optional: Additional components to install

      - name: Install Cargo dependencies
        run: cargo fetch

      - name: Run tests
        run: cargo test

      - name: Build crate
        run: cargo build --release
        # Builds the crate in release mode

      - name: Determine Tag
        id: tag
        run: |
          # Extract version from Cargo.toml
          VERSION=$(grep '^version' Cargo.toml | sed -E 's/version\s*=\s*"(.*)"/\1/')
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

          # Check if the tag already exists
          TAG_NAME="v${VERSION}"
          if git rev-parse "${TAG_NAME}" >/dev/null 2>&1; then
            echo "Tag ${TAG_NAME} already exists. Incrementing version..."
            # Find all existing tags that start with 'v'
            TAGS=$(git tag -l 'v*')
            # Increment the version
            TAG_NAME=$(echo "$TAGS" | sort -V | tail -n 1 | awk -F. -v OFS=. '{print $1 "." $2 "." $3+1}')
          fi

          echo "Using tag: ${TAG_NAME}"
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV

      - name: Create Tag
        id: create_tag
        run: |
          git tag ${{ env.TAG_NAME }}
          git push origin ${{ env.TAG_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        if: success() # This ensures the release is created only if tests and build succeed
        uses: softprops/action-gh-release@v1
        with:
          files: target/release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
